{"version":3,"sources":["views/Homepage/index.js","components/Title/index.js","views/lesson1/lesson1.js","views/lesson2/lesson2.js","router/index.js","views/layout/Content.js","views/layout/layout.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","react_default","a","createElement","className","React","Component","Title","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lessonArray","lesson","lessonName","num","_this$state","Date","toLocaleTimeString","Lesson1","console","log","history","location","pathname","pathName","indexOf","currentLesson","substring","n","arrayNum","src_components_Title","Lesson2","Routers","Switch","Route","exact","path","component","Content","router","SubMenu","Menu","Layout","current","handleClick","e","setState","key","menu","onClick","selectedKeys","mode","Item","Link","to","icon","type","title","layout_Content","App","layout_layout","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe2ad116.chunk.js","sourcesContent":["import React from 'react'\nimport './index.scss'\n\nclass Homepage extends React.Component{\n\n    render(){\n        return(\n            <div className=\"home-page\">\n                Welcome Yijun's Home!\n            </div>\n        )\n    }\n}\n\nexport default Homepage","import React from 'react'\nimport './index.scss'\n\nclass Title extends React.Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            lessonArray:[\n                {\n                    lesson: 'Lesson 1',\n                    lessonName: 'Lesson 1 - Web Programming Concepts',\n                },\n                {\n                    lesson: 'Lesson 2',\n                    lessonName: 'Lesson 2 - Principles Of The Internet',\n                },\n            ],\n            num: this.props.lesson-1,\n        }\n    }\n    render(){\n        const { lessonArray, num } = this.state\n        return(\n            <div className=\"titleWrap\">\n                <h1 className=\"title\">{lessonArray[num].lessonName}</h1>\n                <span>Posted on {new Date().toLocaleTimeString()} by Yijun</span>\n            </div>\n        )\n    }\n}\n\nexport default Title","import React from 'react'\nimport Title from '../../components/Title'\nimport './index.scss'\n\nclass Lesson1 extends React.Component{\n    constructor(props){\n        super(props)\n        console.log(props.history.location.pathname)\n        let pathName = props.history.location.pathname\n        let num = pathName.indexOf('l')\n        let currentLesson = pathName.substring(num)\n        let n = currentLesson.indexOf('n')\n        let arrayNum = currentLesson.substring(++n)\n        console.log(arrayNum)\n        this.state = {\n            currentLesson: arrayNum\n        }\n    }\n\n    render(){\n        const { currentLesson } = this.state\n        return(\n            <div className=\"lesson-one\">\n                <Title lesson={currentLesson}/>\n                <section className=\"lesson-one-content\">\n                    <h3 className=\"assignment-title\">Explain web programming concept</h3>\n                    <section className=\"question-one\">\n                        <h5><i>Hypertext Transfer Protocol (HTTP)</i></h5>\n                        <p>\n                            The hypertext transfer protocol is hypermedia information system transferring files over Would Wide Web.The user can go through hyperlinks to get the resources.\n                        </p>\n                    </section>\n                    <section className=\"question-one\">\n                        <h5><i>Stateless programming</i></h5>\n                        <p>\n                            Stateless programming is a paradigm in which the operations(functions, methods, procedures, whatever you call them) you implement are not sensitive to the state of the computation.\n                        </p>\n                    </section>\n                    <section className=\"question-one\">\n                        <h5><i>Session management</i></h5>\n                        <p>\n                            Session management is the rule set that governs interactions between a web - based application and users.Browsers and websites use HTTP to communicate, and a web session is a series of HTTP requests and response transactions created by the same user.\n                        </p>\n                        <p>\n                            Since HTTP is a stateless protocol, where each request and response pair is independent of other web interactions, each command runs independently without knowing previous commands.In order to introduce the concept of a session, it is necessary to implement session management capabilities that link both the authentication and access control(or authorization) modules commonly available in web applications.\n                        </p>\n                        <p>\n                            There are two types of session managementâ€“ cookie - based and URL rewriting.These can be used independently or together.A web administrator uses session management to track the frequency of visits to a website and movement within the site.\n                        </p>   \n                    </section>\n                    <section className=\"question-one\">\n                        <h5><i>Authentication and web security</i></h5>\n                        <p>\n                            Authentication is the process of identifying an individual, usually based on a username and password.While web security involves authorization, authentication is distinct from authorization, which is the process of giving individuals access to system objects based on their identity.Web security relies on authorization to avoid malicious software and cyber attacks.\n                        </p>\n                    </section>\n                    <section className=\"question-one\">\n                        <h5><i>Client-side programming</i></h5>\n                        <p>\n                            Client Side programming mostly involves the user interface in which the user interacts with.In web development itâ€™ s the browser, in the userâ€™ s machine that runs the code and its mainly done in java - script, flash, etc.This code must be run in a variety of different browsers.\n                        </p>\n                    </section>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default Lesson1","import React from 'react'\nimport Title from '../../components/Title'\nimport './index.scss'\n\nclass Lesson2 extends React.Component{\n    constructor(props){\n        super(props)\n        console.log(props.history.location.pathname)\n        let pathName = props.history.location.pathname\n        let num = pathName.indexOf('l')\n        let currentLesson = pathName.substring(num)\n        let n = currentLesson.indexOf('n')\n        let arrayNum = currentLesson.substring(++n)\n        console.log(arrayNum)\n        this.state = {\n            currentLesson: arrayNum\n        }\n    }\n\n    render(){\n        const { currentLesson } = this.state\n        return(\n            <div className=\"lesson-one\">\n                <Title lesson={currentLesson}/>\n                <section className=\"lesson-one-content\">\n                    <h3 className=\"assignment-title\">Explain Internet Principles</h3>\n                    <section className=\"question-one\">\n                        <h5><i>Client/Server Model</i></h5>\n                        <p>\n                            <b>Clientâ€“ server model</b> is a distributed application structure that partitions tasks or workloads between the providers of a resource or service, called servers, and service requesters, called clients.\n                        </p>\n                        <p>\n                            Often clients and servers communicate over a computer network on separate hardware, but both client and server may reside in the same system.\n                        </p>   \n                        <p>\n                            A server host runs one or more server programs which share their resources with the clients.A client does not share any of their resources, but requests a serverâ€™ s content or service\n                            function.\n                        </p>\n                        <p>\n                            Clients therefore initiate communication sessions with servers which await incoming requests.Examples of computer applications that use the client - server model are Email, network printing, and the World Wide Web.\n                        </p>\n                    </section>\n                    <section className=\"question-one\">\n                        <h5><i>Internet Protocols</i></h5>\n                        <p>\n                            <b>The Internet Protocol (IP)</b> is the method or protocol by which data is sent from one computer to another on the Internet.Each computer(known as a host) on the Internet has at least one IP address that uniquely identifies it from all other computers on the Internet.\n                        </p>\n                    </section>\n                    <section className=\"question-one\">\n                        <h5><i>TCP/IP</i></h5>\n                        <p>\n                            <b>TCP/IP</b>, or the Transmission Control Protocol/Internet Protocol, is a suite of communication protocols used to interconnect network devices on the internet. TCP/IP can also be used as a communications protocol in a private network (an intranet or an extranet).\n                        </p>\n                    </section>\n                    <section className=\"question-one\">\n                        <h5><i>Domain Name Server(DNS)</i></h5>\n                        <p>\n                            <b>The Domain Name System (DNS)</b> is a hierarchical and decentralized naming system for computers, services, or other resources connected to the Internet or a private network. It associates various information with domain names assigned to each of the participating entities. \n                        </p>\n                    </section>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default Lesson2","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Homepage from '../views/Homepage'\nimport Lesson1 from '../views/lesson1/lesson1'\nimport Lesson2 from '../views/lesson2/lesson2'\n\nclass Routers extends React.Component {\n    render(){\n        return(\n            <Switch>\n                <Route exact path=\"/emerging-tech/\" component={Homepage} />\n                <Route path=\"/assignment/lesson1\" component={Lesson1} />\n                <Route path=\"/assignment/lesson2\" component={Lesson2} />\n            </Switch>\n            \n        )\n    }   \n}\nexport default Routers;","import React from 'react'\nimport Routers from '../../router/index';\n\nclass Content extends React.Component{\n\n    render(){\n        return(\n            <div className='content'>\n                <Routers />\n            </div>\n        )    \n    }\n}\n\nexport default Content","import React from 'react'\nimport { Menu, Icon } from 'antd'\nimport './index.scss'\nimport \"antd/dist/antd.css\"\nimport Content from './Content'\nimport { Link } from 'react-router-dom'\n\n\nconst SubMenu = Menu.SubMenu;\n\nclass Layout extends React.Component {\n    state = {\n        current: 'home',\n    }\n\n    handleClick = (e) => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    }\n\n    render() {\n        const { current } = this.state\n        return (\n        <div className=\"wrap\">\n            <Menu\n                onClick={this.handleClick}\n                selectedKeys={[current]}\n                mode=\"horizontal\"\n            >\n                <Menu.Item key=\"yijun\" className=\"ant-col-10 website-name\">\n                    YIJUN's HOME\n                </Menu.Item>\n                <Menu.Item key=\"home\" className=\"ant-col-6 ant-col-offset-2\">\n                    <Link to='/emerging-tech/'>\n                        <Icon type=\"home\" />Home\n                    </Link>\n                </Menu.Item>\n                <SubMenu title={<span className=\"submenu-title-wrapper ant-col-6\"><Icon type=\"project\" />Assignment</span>}>\n                    <Menu.Item key=\"1\">\n                        <Link to='/assignment/lesson1'>Lesson 1</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <Link to='/assignment/lesson2'>Lesson 2</Link>   \n                    </Menu.Item>\n                </SubMenu>\n            </Menu>\n            <Content />\n        </div>    \n\n        );\n    }\n}\n\nexport default Layout","import React, { Component } from 'react';\nimport Layout from './views/layout/layout'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>    \n    ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}